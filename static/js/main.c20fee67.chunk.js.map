{"version":3,"sources":["logo.svg","Clevent.js","Setstate.js","Bindevent.js","If.js","Getmethodfakerestapi.js","Postmethod.js","Form.js","App.js","reportWebVitals.js","index.js"],"names":["Component","App","className","src","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,G,MAAA,IAA0B,kC,kDCGnBA,YCKFA,Y,UCNDA,Y,oBCGFA,Y,mBCAkBA,Y,OCDVA,YCANA,YC+DJC,MAxBf,WACE,OACE,qBAAKC,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UAIE,qBAAKC,IAAKC,EAAMF,UAAU,WAAWG,IAAI,SACzC,sCACO,kDADP,0BAGA,mBACEH,UAAU,WACVI,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,iCC1COC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c20fee67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react';\nimport './App.css';\n\nclass Clevent extends Component {\n    state = {  }\n    message(){\n\n        var change = document.getElementById('hi');\n        change.classList.toggle('blue')\n        \n        // change.css({color:black})\n        // alert('Your message')\n    }\n    render() { \n        return ( \n            <button id=\"pink\" onClick={this.message} className=\"padding\">Hi Click me class component</button>\n         );\n    }\n}\n \nexport default Clevent;","import React, { Component } from 'react';\nimport './App.css';\n// var num = 0;\n\nvar num = 0;\nvar numtwo = num;\nvar interval;\n\nclass State extends Component {\n\n\n    constructor(props){\n        super(props)\n        this.state = {\n            count:0\n        }\n    }\n    \n    // state = {\n    //     count: 0,\n    //     // interval:num\n    //     num:0\n    // }\n       \n    increase(){\n       this.interval = setInterval(() => {\n\n\n           this.setState(prevState=>({\n               count :prevState.count +1\n        }))\n\n       }, 100);\n    }\n\n\n\n    // num = ++num;\n    // console.log(num);\n    // this.state({\n    //     // num:this.state.num++\n    // })\n // }, 100);\n\n\n        // this.setState({\n\n            \n        //     num: this.state.num\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\n        \n        \n\n\n    // this.setState({\n        // num:this.state.setInterval()\n        // num: this.state.num+1\n        // interval:this.state.num\n        // setInterval();\n        // num:this.state.interval\n\n        // var : num = 0,\n        // num:++num,\n        // num: this.state.num\n\n\n        \n    // })\n    \n\n\n   \n        \n        \n        // this.setState({\n        //     count: this.state.count +1\n        // },()=>{console.log(\"callback increase value= \",this.state.count)} )\n\n    \n    // }\n\n    noincrease(){\n            clearInterval(this.interval);\n    }\n\n    decrease(){\n           this.interval = setInterval(() => {\n           this.setState(prevState=>({\n               count :prevState.count - 1\n        \n        }))\n       }, 100);\n        // this.setState({\n        //     count: this.state.count -1\n        // },()=>{console.log(\"callback decrease value= \",this.state.count)} )\n    }\n    nodecrease(){\n            clearInterval(this.interval);\n    }\n    render() { \n        const {count} = this.state\n        return ( \n\n            <div>\n                \n                <button onMouseOver={()=>this.increase()}  onMouseOut={()=>this.noincrease()} className=\"icon padding\">+</button>\n                <h3>Countttt {count}</h3>\n                <button onMouseOver={()=>this.decrease()} onMouseOut={()=>this.nodecrease()}  className=\"icon padding\">-</button>\n            </div>\n         );\n    }\n}\n \nexport default State;\n","import React, { Component } from 'react';\n\nclass Bind extends Component {\n    state = {  }\n    constructor(){\n        super()\n        this.state={\n        message:\"Bind me!\"\n        }\n        \n        this.handle = this.handle.bind(this)\n\n    }\n    // handle =()=>{\n    //     this.setState({\n    //         message:\"you changed me!\"\n    //     })\n    // }\n    handle =()=>{\n        this.setState({\n            message:\"you changed me!\"\n        })\n    }\n\n\n    render() { \n        return ( \n            <div>\n            <h3>{this.state.message}</h3>\n            {/* <button onClick={this.handle}  className=\"padding\">9. Bind Event</button> */}\n            <button onClick={this.handle}  className=\"padding\">9. Bind Event</button>\n            \n       \n            </div>\n            \n         );\n    }\n}\n \nexport default Bind;","import React, { Component } from \"react\";\nimport { TextField } from \"@material-ui/core\";\nimport { Button } from \"@material-ui/core\";\nimport './App.css';\n// import Classes from '@material-ui/core/Class';\nclass If extends Component {\n  // state = {\n  //     condition : \"hiddd\"\n  //  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      condition: \"null\",\n    };\n  }\n\n  handle = (a) => {\n    this.setState((prevState) => ({\n      condition: a.target.value,\n    }));\n    // console.log(a.target.value)\n    //         // alert(e.target.value)\n  };\n\n  render() {\n    // return (\n    //     <div>\n    //         <h2>10. Condtition test</h2>\n    //         answer is condition={this.state.condition}\n\n    //     </div>\n\n    //  );\n\n    // if(this.state.condition == \"hi\")\n    // return(\n    //     <h1>hi</h1>\n    // )\n    // else{\n    //     return(\n    //     <h1>no</h1>\n    // )\n\n    // }\n    //         { return this.state.condition == \"hi\" ?  <p>say hi</p> : <p>say other</p>\n\n    //  }\n\n    if (this.state.condition == \"hi\")\n      return (\n        <div>\n          <h2>10. Condtition test</h2>\n          <form noValidate autoComplete=\"off\">\n            {/* <TextField  id=\"standard-basic\" label=\"Standard\" /> */}\n            {/* <TextField  id=\"filled-basic\" label=\"Filled\" variant=\"filled\" /> */}\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Outlined\"\n              variant=\"outlined\"\n              onChange={this.handle}\n            />\n            <Button variant=\"contained\" color=\"primary\">\n              My button\n            </Button>\n          </form>\n          you typed={this.state.condition}\n          <br />\n          answer is hi\n          <h3 className=\"true\">same hi</h3>\n          <hr />\n        </div>\n      );\n    else {\n      return (\n        <div>\n          <h2>10. Condtition test</h2>\n          <form noValidate autoComplete=\"off\">\n            {/* <TextField  id=\"standard-basic\" label=\"Standard\" /> */}\n            {/* <TextField  id=\"filled-basic\" label=\"Filled\" variant=\"filled\" /> */}\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Outlined\"\n              variant=\"outlined\"\n              onChange={this.handle}\n              InputLabelProps={{\n                style: { color: \"#fff\" },\n              }}\n            />\n            <Button variant=\"contained\" color=\"primary\">\n              My button\n            </Button>\n          </form>\n         \n          \n          you typed={this.state.condition}\n          <br />\n          real answer is hi\n          <h3 className=\"false\">different</h3>\n          <hr />\n        </div>\n      );\n    }\n\n    //  <div><h1>10. Condtition test</h1>\n    //      answer is condition={this.state.condition}\n    //     {this.state.condition == \"hi\" ? <p>say hi</p> : <p>say other</p>}\n    //     if statement\n\n    //     {/* {if(this.state.condition == \"hi\") }\n\n    //      return(10. Condtition test)\n\n    //     else return (10. Condtition test) */}\n\n    // <hr/>\n    // </div>\n\n    // answer is condition={this.state.condition}\n  }\n}\n\nexport default If;\n","import axios from \"axios\";\nimport React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport \"./App.css\";\n\nclass Getmethodfakerestapi extends Component {\n  state = {\n    posts: [],\n    isActive: true,\n    msg: \"\",\n  };\n\n  componentDidMount() {\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => {\n        console.log(response);\n        this.setState({\n          posts: response.data,\n        });\n      })\n\n      .catch((error) => {\n        console.log(error);\n        this.setState({\n          msg: \"get method fake api error link not fount 404\",\n        });\n      });\n  }\n\n  handletoggle = () => {\n    this.setState({\n      isActive: !this.state.isActive,\n    });\n  };\n  render() {\n    const isActive = this.state.isActive;\n    return (\n      <div>\n        {this.state.msg ? <div className=\"error\">{this.state.msg}</div> : null}\n        <h1>12. get method fake rest api with axios</h1>\n        lists of fake api{\" \"}\n        <Button\n          onClick={this.handletoggle}\n          variant=\"contained\"\n          color=\"secondary\"\n        >\n          Toggle\n        </Button>\n        {this.state.posts\n          ? this.state.posts.map((post) => (\n              <div className={isActive ? \"list\" : null} key={post.id}>\n                {post.id}. {post.title}\n              </div>\n            ))\n          : null}\n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Getmethodfakerestapi;\n","import React, { Component } from \"react\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\n\nclass Postmethod extends Component {\n  state = {\n    title: \"\",\n    body: \"\",\n    userId: \"\",\n  };\n  handleChange = (e) => {\n      \n    this.setState({ [e.target.name]: e.target.value });\n    console.log(this.state)\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    console.log(this.state)\n     axios\n      .get(\"https://jsonplaceholder.typicode.com/posts\")\n      .then((response) => {\n        console.log(response)\n        ;\n        // this.setState({\n        //   posts: response.data,\n        // });\n      })\n\n      .catch((error) => {\n        console.log(error);\n        // this.setState({\n        //   msg: \"get method fake api error link not fount 404\",\n        // });\n      });\n  };\n  render() {\n    const { title, body, userId } = this.state;\n    return (\n      <div>\n        <h1>13. Post method</h1>\n\n        <form onSubmit={this.handleSubmit}>\n          <TextField\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            onChange={this.handleChange}\n            value={title}\n            id=\"standard-basic\"\n            label=\"title\"\n            name=\"title\"\n          />\n          <TextField\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            onChange={this.handleChange}\n            value={body}\n            id=\"filled-basic\"\n            label=\"body\"\n            name=\"body\"\n            variant=\"filled\"\n          />\n          <TextField\n            InputLabelProps={{\n              style: { color: \"#fff\" },\n            }}\n            onChange={this.handleChange}\n            value={userId}\n            id=\"outlined-basic\"\n            label=\"userId\"\n            name=\"userId\"\n            variant=\"outlined\"\n          />\n\n          <div>\n            <Button\n              type=\"submit\"\n              onClick={this.handletoggle}\n              variant=\"contained\"\n              color=\"primary\"\n            >\n              {\" \"}\n              Submit\n            </Button>\n          </div>\n        </form>\n        \n        <hr />\n      </div>\n    );\n  }\n}\n\nexport default Postmethod;\n","import React,{Component} from 'react';\nimport { TextField,Button } from \"@material-ui/core\";\nimport './App.css';\n\nclass Form extends Component{\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            name:'',\n            pass:''\n             \n        }\n    }\n    nameChange = (e)=>{\n        this.setState({\n            name:e.target.value\n            \n        })\n    }\n    passChange = (e)=>{\n        this.setState({\n            pass:e.target.value\n            \n        })\n    }\n    \n    handle = (e)=>{\n        e.preventDefault();\n        alert(`Username: ${this.state.name} Pass: ${this.state.pass} ` )\n\n    }\n\n\n    render() {\n\n        return(\n            <div>\n                <h1>14. Form</h1>\n                <form onSubmit={this.handle}>\n                    <div>\n                        <label><span className=\"true\">{this.state.name}</span>:Username</label>\n\n                        <TextField value={this.state.name} name=\"name\" onChange={this.nameChange} placeholder=\"Enter username\" />\n                        \n                    </div>\n                    <div>\n                        <label><span className=\"true\">{this.state.pass}</span>:Password</label>\n                        <TextField value={this.state.pass} name=\"pass\" onChange={this.passChange} placeholder=\"Enter password\" />\n                    </div>\n                    <div>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\">SHow me This alert</Button>\n                    </div>\n\n                    \n                </form>\n                <hr></hr>\n            </div>\n        )\n    }\n\n}\nexport default Form;","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport Fun from './Funevent';\nimport Clevent from './Clevent';\nimport State from './Setstate';\nimport Bind from './Bindevent';\nimport If from './If';\nimport Maplistrender from './Maplistrender';\nimport Getmethodfakerestapi from './Getmethodfakerestapi';\nimport Postmethod from './Postmethod';\nimport Form from './Form';\n// import React, { Component } from 'react';\n// class App extends Component {\n//   // state = {  }\n//   constructor(){\n//     super()\n//     this.state={\n//       message:'Change me !'\n//     };\n//   }\n//   changeMessage(){\n//     this.setState({message:'React text changed!'})\n//   }\n\n//   render() { \n//     return (\n//          <div className=\"App\">\n//             <header className=\"App-header\">\n//               <h1>hey class component</h1>\n//               <button onClick={()=>this.changeMessage()}>Change</button>\n//               <h3>{this.state.message}</h3>\n//             </header>\n//          </div> \n         \n//          );\n//   }\n\n\n// }\n \n// export default App;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n     \n\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>- Hello World </code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Than Htut Zaw\n        </a>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}